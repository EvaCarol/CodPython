{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def funcaoLeitura():\n",
    "    for num in range(5):\n",
    "        print(\"Número \", num)\n",
    "\n",
    "print(funcaoLeitura()) \n",
    "\n",
    "#Função para somar dois numeros\n",
    "def addNum(n1, n2):\n",
    "    print(\"O primeiro número é: \", n1)\n",
    "    print(\"O segundo número é: \", n2)        \n",
    "    print(\"A soma dos números é: \", n1+n2)\n",
    "\n",
    "addNum(4, 3)    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "varGlobal = 10 #essa é uma variável global\n",
    "def multiplica(num1, num2):\n",
    "    varGlobal = num1 * num2 #essa é uma variável local\n",
    "    print(\"Variável da função multiplica: \", varGlobal)\n",
    "    print(varGlobal)\n",
    "\n",
    "multiplica(5, 6)  \n",
    "print(varGlobal) #Ele puxa a variável acima (Não identada)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def variosParametros(*parametros):\n",
    "    for n, item in enumerate(parametros):\n",
    "        print(\"Parâmetro\", n, item)\n",
    "    return\n",
    "\n",
    "variosParametros('Luquinhas', 'Madá', 'Giggio')    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "def soma(n1, n2):\n",
    "    return n1+n2\n",
    "\n",
    "def subtrai(n1, n2):\n",
    "    return n1-n2\n",
    "\n",
    "def multi(n1, n2):\n",
    "    return n1*n2\n",
    "\n",
    "def divide(n1, n2):\n",
    "    return n1/n2\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+===================+\n",
      "| MENU DE OPERAÇÕES |\n",
      "| 1- SOMAR          |\n",
      "| 2- SUBTRAI        |\n",
      "| 3- MULTIPLICA     |\n",
      "| 4- DIVIDIR        |\n",
      "| 5- SAIR           |\n",
      "+===================+\n",
      "Insira uma opção válida: \n",
      "+===================+\n",
      "| MENU DE OPERAÇÕES |\n",
      "| 1- SOMAR          |\n",
      "| 2- SUBTRAI        |\n",
      "| 3- MULTIPLICA     |\n",
      "| 4- DIVIDIR        |\n",
      "| 5- SAIR           |\n",
      "+===================+\n"
     ]
    }
   ],
   "source": [
    "while True:\n",
    "    print(\"+===================+\")\n",
    "    print(\"| MENU DE OPERAÇÕES |\")\n",
    "    print(\"| 1- SOMAR          |\")\n",
    "    print(\"| 2- SUBTRAI        |\")\n",
    "    print(\"| 3- MULTIPLICA     |\")\n",
    "    print(\"| 4- DIVIDIR        |\")\n",
    "    print(\"| 5- SAIR           |\")\n",
    "    print(\"+===================+\")\n",
    "\n",
    "    op = int(input())\n",
    "    if op==0:\n",
    "        break\n",
    "\n",
    "    n1 = int(input(\"Primeiro número: \"))\n",
    "    n2 = int(input(\"Segundo número: \")) \n",
    "\n",
    "    if op==1:\n",
    "        print(\"O resultado da soma é: \", soma(n1, n2))\n",
    "        break\n",
    "    elif op==2:\n",
    "        print(\"O resultado da subtração é: \", subtrai(n1, n2))\n",
    "        break\n",
    "    elif op==3:\n",
    "        print(\"O resultado da multiplicação é: \", multi(n1, n2))\n",
    "        break\n",
    "    elif op==4:\n",
    "        print(\"O resultado da divisão é: \", divide(n1, n2))\n",
    "        break\n",
    "    else:\n",
    "        print(\"Insira uma opção válida: \")\n",
    "    \n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
